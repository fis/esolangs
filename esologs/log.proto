syntax = "proto3";

package esologs;

// Unique identifier for a log event, based on its position in the logs.
message LogEventId {
  // Name of the target (network + channel pair) the event is related to.
  string target = 1;
  // Count of days, with 0 denoting January 1st, 1970.
  int64 day = 2;
  // Log event index within the day, with 0 denoting the first event.
  uint64 line = 3;
}

// IRC log event.
message LogEvent {
  // Time of the event, as an offset from midnight in microseconds.
  uint64 time_us = 1;

  // Position of the event in the logs.
  //
  // This field is not stored in the log files, as it's implicit. It's populated
  // whenever sending around events in a context where the logfile they came
  // from is not known.
  LogEventId event_id = 6;

  // Prefix of the IRC message, without the leading ':'.
  bytes prefix = 2;

  // User account of the person sending the message. This field is only set if the network
  // supports the `account-tag` IRCv3 extension, and the message contains the "account" tag.
  bytes account = 7;

  // The command or the numeric portion.
  bytes command = 3;

  // The command parameters. Whether the last parameter had a leading ':' is not
  // indicated, though if it contains any space characters, it must have had.
  repeated bytes args = 4;

  // Any message tags, excluding "account" (which can be found in its own field).
  repeated Tag tags = 8;

  // Direction type for log events.
  enum Direction {
    // Received by the client. Default value.
    RECEIVED = 0;
    // Sent by the client.
    SENT = 1;
  }

  // Direction of the event (received or sent, from the client's perspective).
  Direction direction = 5;
}

// IRCv3 message tag, a (key, value) pair.
message Tag {
  string key = 1;
  string value = 2;
}
